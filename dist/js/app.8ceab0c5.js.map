{"version":3,"file":"js/app.8ceab0c5.js","mappings":"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","sources":["webpack://rag-app-vue/./src/App.vue","webpack://rag-app-vue/./src/components/RAGApp.vue","webpack://rag-app-vue/./src/components/RAGApp.vue?863b","webpack://rag-app-vue/./src/App.vue?7ccd","webpack://rag-app-vue/./src/main.js","webpack://rag-app-vue/webpack/bootstrap","webpack://rag-app-vue/webpack/runtime/chunk loaded","webpack://rag-app-vue/webpack/runtime/define property getters","webpack://rag-app-vue/webpack/runtime/global","webpack://rag-app-vue/webpack/runtime/hasOwnProperty shorthand","webpack://rag-app-vue/webpack/runtime/make namespace object","webpack://rag-app-vue/webpack/runtime/jsonp chunk loading","webpack://rag-app-vue/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <RAGApp />\n  </div>\n</template>\n\n<script>\nimport RAGApp from './components/RAGApp.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    RAGApp\n  }\n}\n</script>\n\n<style>\n@import './assets/tailwind.css';\n</style>","<template>\n  <div class=\"rag-app min-h-screen bg-gray-100 p-6\">\n    <header class=\"mb-6 bg-white shadow rounded-lg p-4 flex justify-between items-center\">\n      <h1 class=\"text-3xl font-bold text-indigo-600\">RAG Application</h1>\n      <!-- Hamburger menu button -->\n      <button @click=\"toggleSettings\" class=\"p-2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\" />\n        </svg>\n      </button>\n    </header>\n\n    <!-- Settings panel (API Key, Base URL, Models) -->\n    <div v-if=\"showSettings\" class=\"mb-6 bg-white p-4 rounded-lg shadow\">\n      <h2 class=\"text-xl font-semibold mb-4\">Settings</h2>\n      \n      <!-- API Key Input -->\n      <div class=\"mb-4\">\n        <label for=\"api-key\" class=\"block text-sm font-medium text-gray-700 mb-2\">OpenAI API Key</label>\n        <div class=\"flex items-center\">\n          <input id=\"api-key\" v-model=\"apiKey\" type=\"password\" placeholder=\"Enter your OpenAI API key\"\n            class=\"flex-grow p-2 border border-gray-300 rounded-l-md focus:ring-indigo-500 focus:border-indigo-500\" />\n          <button @click=\"validateAndSaveApiKey\"\n            class=\"bg-indigo-600 text-white px-4 py-2 rounded-r-md hover:bg-indigo-700 transition duration-150 ease-in-out\">\n            Save API Key\n          </button>\n        </div>\n      </div>\n\n      <!-- Base URL Input -->\n      <div class=\"mb-4\">\n        <label for=\"base-url\" class=\"block text-sm font-medium text-gray-700 mb-2\">Provider Base URL</label>\n        <input id=\"base-url\" v-model=\"baseUrl\" type=\"text\" placeholder=\"Enter provider base URL\"\n          class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\" />\n      </div>\n\n      <!-- Embedding Model Input -->\n      <div class=\"mb-4\">\n        <label for=\"embedding-model\" class=\"block text-sm font-medium text-gray-700 mb-2\">Embedding Model</label>\n        <input id=\"embedding-model\" v-model=\"embeddingModel\" type=\"text\" placeholder=\"Enter embedding model name\"\n          class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\" />\n      </div>\n\n      <!-- Chat Model Input -->\n      <div class=\"mb-4\">\n        <label for=\"chat-model\" class=\"block text-sm font-medium text-gray-700 mb-2\">Chat Model</label>\n        <input id=\"chat-model\" v-model=\"chatModel\" type=\"text\" placeholder=\"Enter chat model name\"\n          class=\"w-full p-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\" />\n      </div>\n\n      <button @click=\"saveSettings\"\n        class=\"bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition duration-150 ease-in-out\">\n        Save Settings\n      </button>\n    </div>\n\n    <!-- API Key Input (only shown if API key is not valid) -->\n    <div v-if=\"!isApiKeyValid\" class=\"mb-6 bg-white p-4 rounded-lg shadow\">\n      <label for=\"api-key\" class=\"block text-sm font-medium text-gray-700 mb-2\">OpenAI API Key</label>\n      <div class=\"flex items-center\">\n        <input id=\"api-key\" v-model=\"apiKey\" type=\"password\" placeholder=\"Enter your OpenAI API key\"\n          class=\"flex-grow p-2 border border-gray-300 rounded-l-md focus:ring-indigo-500 focus:border-indigo-500\" />\n        <button @click=\"validateAndSaveApiKey\"\n          class=\"bg-indigo-600 text-white px-4 py-2 rounded-r-md hover:bg-indigo-700 transition duration-150 ease-in-out\">\n          Save API Key\n        </button>\n        <span v-if=\"isApiKeyValid\" class=\"ml-2 text-green-500\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n          </svg>\n        </span>\n      </div>\n    </div>\n\n    <!-- Progress Bar (only shown when indexing) -->\n    <div v-if=\"isIndexing\" class=\"mb-6 bg-white p-4 rounded-lg shadow\">\n      <h2 class=\"text-lg font-semibold mb-2 text-gray-800\">Indexing Progress</h2>\n      <div class=\"w-full bg-gray-200 rounded-full h-2.5 dark:bg-gray-700\">\n        <div class=\"bg-blue-600 h-2.5 rounded-full\" :style=\"{ width: `${indexingProgress}%` }\"></div>\n      </div>\n      <p class=\"mt-2 text-sm text-gray-600\">{{ indexingProgressText }}</p>\n    </div>\n\n    <div class=\"flex flex-grow space-x-6\">\n      <!-- Left Column - PDF Upload and Display -->\n      <div class=\"w-1/3 bg-white p-6 rounded-lg shadow overflow-y-auto\">\n        <h2 class=\"text-xl font-semibold mb-4 text-gray-800\">PDF Document</h2>\n        <label for=\"file-upload\"\n          class=\"cursor-pointer bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 transition duration-150 ease-in-out inline-block mb-4\">\n          Upload PDF\n          <input id=\"file-upload\" type=\"file\" @change=\"handleFileUpload\" accept=\"application/pdf\"\n            class=\"hidden\" />\n        </label>\n        <button @click=\"clearEmbeddingsCache\"\n          class=\"bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition duration-150 ease-in-out ml-2\">\n          Clear Embeddings Cache\n        </button>\n        <!-- Add the new Reset button -->\n        <button @click=\"handleReset\"\n          class=\"bg-yellow-500 text-white px-4 py-2 rounded-md hover:bg-yellow-600 transition duration-150 ease-in-out ml-2\">\n          Reset\n        </button>\n        <div v-if=\"pdfText\" class=\"bg-gray-50 p-4 rounded-md mt-4\">\n          <p class=\"whitespace-pre-wrap text-sm text-gray-600\" v-html=\"highlightedPdfText\"></p>\n        </div>\n        <p v-else class=\"text-gray-500\">Upload a PDF to see its content here.</p>\n      </div>\n\n      <!-- Center Column - RAG Output -->\n      <div class=\"w-1/3 bg-white p-6 rounded-lg shadow overflow-y-auto\">\n        <h2 class=\"text-xl font-semibold mb-4 text-gray-800\">RAG Details</h2>\n        <div v-if=\"prompt\" class=\"mb-4\">\n          <h3 class=\"text-lg font-semibold mb-2\">Generated Prompt:</h3>\n          <div class=\"bg-gray-100 p-2 rounded-md whitespace-pre-wrap text-sm\" v-html=\"coloredPrompt\"></div>\n        </div>\n      </div>\n\n      <!-- Right Column - Question Input and AI Response -->\n      <div class=\"w-1/3 flex flex-col\">\n        <div class=\"bg-white p-6 rounded-lg shadow sticky top-6\">\n          <h2 class=\"text-lg font-semibold mb-4\">Ask a Question</h2>\n          <textarea \n            v-model=\"question\" \n            @keyup.enter=\"submitQuestion\"\n            placeholder=\"Ask a question about the document...\"\n            class=\"w-full p-2 border border-gray-300 rounded-md mb-4 focus:ring-indigo-500 focus:border-indigo-500\"\n            rows=\"4\"\n          ></textarea>\n          <button @click=\"submitQuestion\"\n            class=\"w-full bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition duration-150 ease-in-out\"\n            :disabled=\"!question || !isIndexed || isProcessing\">\n            {{ isProcessing ? 'Processing...' : 'Submit Question' }}\n          </button>\n          <p v-if=\"error\" class=\"mt-2 text-red-600\">{{ error }}</p>\n          \n          <!-- AI Response -->\n          <div v-if=\"ragResponse\" class=\"mt-4\">\n            <h3 class=\"text-lg font-semibold mb-2\">AI Response:</h3>\n            <p class=\"text-gray-600\">{{ ragResponse }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as pdfjsLib from 'pdfjs-dist';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst CHUNK_SIZE = 5000; // DONOT CHANGE\nconst CHUNK_OVERLAP = 500; // DONOT CHANGE\nconst DELAY_BETWEEN_BATCHES = 100; // DONOT CHANGE\nconst API_TIMEOUT = 10000; // 10 seconds timeout for API calls\nconst EMBEDDING_MODEL = 'text-embedding-3-small'; // DONOT CHANGE\nconst CHAT_MODEL = 'gpt-4o-mini'; // DONOT CHANGE\nconst TOP_K_SIMILAR_CHUNKS = 8; // DONOT CHANGE\n\nexport default {\n  name: 'RAGApp',\n  data() {\n    return {\n      apiKey: '',\n      pdfText: '',\n      question: '',\n      isIndexing: false,\n      documentEmbeddings: [],\n      embeddingCache: new Map(),\n      isApiKeyValid: false,\n      indexingProgress: 0,\n      indexingProgressText: '',\n      questionEmbedding: null,\n      embeddingModel: EMBEDDING_MODEL,\n      isProcessing: false,\n      prompt: '',\n      ragResponse: '',\n      error: '',\n      isIndexed: false,\n      highlightedSnippets: [],\n      showSettings: false,\n      baseUrl: 'https://api.openai.com/v1',\n      chatModel: CHAT_MODEL,\n    };\n  },\n  computed: {\n    coloredPrompt() {\n      if (!this.prompt) return '';\n\n      const parts = this.prompt.split(/(<.*?>)/g);\n      return parts.map(part => {\n        if (part.startsWith('<relevant data') || part.startsWith('</relevant data')) {\n          return `<span style=\"color: blue; font-weight: bold;\">${this.escapeHtml(part)}</span>`;\n        } else if (part.startsWith('<instructions') || part.startsWith('</instructions')) {\n          return `<span style=\"color: green; font-weight: bold;\">${this.escapeHtml(part)}</span>`;\n        } else if (part.startsWith('<user') || part.startsWith('</user')) {\n          return `<span style=\"color: red; font-weight: bold;\">${this.escapeHtml(part)}</span>`;\n        }\n        return this.escapeHtml(part);\n      }).join('');\n    },\n    highlightedPdfText() {\n      if (!this.pdfText) return '';\n      \n      let highlightedText = this.pdfText;\n      this.highlightedSnippets.forEach(snippet => {\n        const escapedSnippet = this.escapeRegExp(snippet);\n        const regex = new RegExp(`(${escapedSnippet})`, 'gi');\n        highlightedText = highlightedText.replace(regex, '<span class=\"bg-yellow-200\">$1</span>');\n      });\n      \n      return highlightedText;\n    }\n  },\n  methods: {\n    async validateAndSaveApiKey() {\n      try {\n        const response = await axios.get(`${this.baseUrl}/models`, {\n          headers: {\n            'Authorization': `Bearer ${this.apiKey}`,\n          },\n        });\n\n        if (response.status === 200) {\n          this.isApiKeyValid = true;\n          localStorage.setItem('openaiApiKey', this.apiKey);\n\n          console.log('Valid OpenAI models:');\n          response.data.data.forEach(model => {\n            console.log(`- ${model.id}`);\n          });\n        }\n      } catch (error) {\n        console.error('Error validating API key:', error);\n        this.isApiKeyValid = false;\n      }\n    },\n\n    async handleFileUpload(event) {\n      const file = event.target.files[0];\n      if (file && file.type === 'application/pdf') {\n        try {\n          const text = await this.extractTextFromPDF(file);\n          this.pdfText = text;\n          // Automatically start indexing after text extraction\n          await this.indexDocument();\n        } catch (error) {\n          console.error('Error processing PDF:', error);\n          alert('Error processing PDF. Please try again.');\n        }\n      } else {\n        alert('Please upload a valid PDF file.');\n      }\n    },\n    async extractTextFromPDF(file) {\n      const arrayBuffer = await file.arrayBuffer();\n      const loadingTask = pdfjsLib.getDocument({ data: arrayBuffer });\n      const pdf = await loadingTask.promise;\n      let fullText = '';\n\n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const textContent = await page.getTextContent();\n        const pageText = textContent.items.map(item => item.str).join(' ');\n        fullText += pageText + '\\n\\n';\n      }\n\n      return fullText;\n    },\n    async submitQuestion() {\n      if (!this.question || !this.apiKey) {\n        this.error = 'Please enter a question and ensure you have a valid API key.';\n        return;\n      }\n\n      if (!this.isIndexed) {\n        this.error = 'Please index the document first.';\n        return;\n      }\n\n      this.isProcessing = true;\n      this.error = '';\n      this.prompt = '';\n      this.ragResponse = '';\n\n      try {\n        console.log('Processing question:', this.question);\n\n        // 1. Get question embedding\n        console.log('Calculating question embedding...');\n        const questionEmbedding = await this.getEmbedding(this.question);\n        console.log('Question embedding calculated successfully');\n\n        // 2. Find similar chunks\n        console.log('Finding similar chunks...');\n        const similarChunks = this.findSimilarChunks(questionEmbedding, TOP_K_SIMILAR_CHUNKS);\n        console.log('Similar chunks found:', similarChunks.length);\n\n        // Store the highlighted snippets\n        this.highlightedSnippets = similarChunks.map(chunk => chunk.text);\n\n        // 3. Generate prompt\n        console.log('Generating prompt...');\n        this.prompt = this.generatePrompt(similarChunks, this.question);\n        console.log('Prompt generated');\n\n        // 4. Call OpenAI chat model\n        console.log('Calling OpenAI chat model...');\n        this.ragResponse = await this.callChatModel(this.prompt);\n        console.log('RAG response received');\n\n      } catch (error) {\n        console.error('Error processing question:', error);\n        this.error = 'Error processing question. Please try again.';\n      } finally {\n        this.isProcessing = false;\n      }\n    },\n\n    findSimilarChunks(questionEmbedding, topK) {\n      return this.documentEmbeddings\n        .map(chunk => ({\n          ...chunk,\n          similarity: this.cosineSimilarity(questionEmbedding, chunk.embedding)\n        }))\n        .sort((a, b) => b.similarity - a.similarity)\n        .slice(0, topK);\n    },\n\n    cosineSimilarity(vecA, vecB) {\n      const dotProduct = vecA.reduce((sum, a, i) => sum + a * vecB[i], 0);\n      const magnitudeA = Math.sqrt(vecA.reduce((sum, a) => sum + a * a, 0));\n      const magnitudeB = Math.sqrt(vecB.reduce((sum, b) => sum + b * b, 0));\n      return dotProduct / (magnitudeA * magnitudeB);\n    },\n\n    generatePrompt(similarChunks, question) {\n      const contextText = similarChunks.map((chunk, index) =>\n        `${index + 1}. ${chunk.text}`\n      ).join('\\n\\n');\n\n      return `<relevant data from embeddings>\n${contextText}\n</relevant data from embeddings>\n\n<instructions>\nPlease answer the user's question based on the text above\n</instructions>\n\n<user's question>\n${question}\n</user's question>`;\n    },\n\n    async callChatModel(prompt) {\n      try {\n        const response = await axios.post(\n          `${this.baseUrl}/chat/completions`,\n          {\n            model: this.chatModel,\n            messages: [{ role: 'user', content: prompt }],\n          },\n          {\n            headers: {\n              'Authorization': `Bearer ${this.apiKey}`,\n              'Content-Type': 'application/json',\n            },\n            timeout: API_TIMEOUT,\n          }\n        );\n        return response.data.choices[0].message.content;\n      } catch (error) {\n        console.error('Error calling chat model:', error);\n        throw error;\n      }\n    },\n\n    chunkText(text) {\n      console.log(`Input text length: ${text.length}`);\n      const chunks = [];\n      let startIndex = 0;\n\n      while (startIndex < text.length) {\n        let endIndex = Math.min(startIndex + CHUNK_SIZE, text.length);\n\n        // Adjust end index to avoid cutting words\n        if (endIndex < text.length) {\n          while (endIndex > startIndex && !text[endIndex - 1].match(/\\s/)) {\n            endIndex--;\n          }\n        }\n\n        // If we couldn't find a space, or if adjusting made the chunk too small, \n        // just use the original end index\n        if (endIndex === startIndex || endIndex - startIndex < CHUNK_SIZE / 2) {\n          endIndex = Math.min(startIndex + CHUNK_SIZE, text.length);\n        }\n\n        // Create the chunk\n        const chunk = text.slice(startIndex, endIndex).trim();\n        console.log(`Creating chunk: start=${startIndex}, end=${endIndex}, length=${chunk.length}`);\n\n        if (chunk.length > 0) {\n          chunks.push(chunk);\n        } else {\n          console.warn(`Empty chunk detected at index ${startIndex}`);\n        }\n\n        // Move to next chunk, ensure we're making progress\n        startIndex = endIndex;\n\n        // If we've reached the end, break the loop\n        if (startIndex >= text.length) {\n          console.log('Reached end of text');\n          break;\n        }\n\n        // Move back by the overlap amount, but not before the previous start\n        startIndex = Math.max(startIndex - CHUNK_OVERLAP, chunks.length > 0 ? endIndex - CHUNK_SIZE : 0);\n      }\n\n      console.log(`Text chunked into ${chunks.length} chunks`);\n      return chunks;\n    },\n\n    async getEmbedding(texts) {\n      // Ensure texts is always an array\n      const textArray = Array.isArray(texts) ? texts : [texts];\n\n      const embeddings = [];\n      const batchSize = 10; // Adjust this value based on API limits and performance\n\n      for (let i = 0; i < textArray.length; i += batchSize) {\n        const batch = textArray.slice(i, i + batchSize);\n\n        const cacheKeys = batch.map(text => this.hashText(text));\n        const uncachedTexts = [];\n        const uncachedIndices = [];\n\n        // Check cache for each text in the batch\n        for (let j = 0; j < batch.length; j++) {\n          if (this.embeddingCache.has(cacheKeys[j])) {\n            embeddings[i + j] = this.embeddingCache.get(cacheKeys[j]);\n          } else {\n            uncachedTexts.push(batch[j]);\n            uncachedIndices.push(i + j);\n          }\n        }\n\n        // If there are uncached texts, get their embeddings\n        if (uncachedTexts.length > 0) {\n          try {\n            console.log(`Requesting embeddings for ${uncachedTexts.length} texts...`);\n\n            const response = await axios.post(\n              `${this.baseUrl}/embeddings`,\n              {\n                input: uncachedTexts,\n                model: this.embeddingModel,\n              },\n              {\n                headers: {\n                  'Authorization': `Bearer ${this.apiKey}`,\n                  'Content-Type': 'application/json',\n                },\n                timeout: API_TIMEOUT,\n              }\n            );\n            console.log('Embeddings received successfully');\n\n            // Store received embeddings in cache and result list\n            response.data.data.forEach((embeddingData, index) => {\n              const embedding = embeddingData.embedding;\n              const originalIndex = uncachedIndices[index];\n              this.embeddingCache.set(cacheKeys[originalIndex - i], embedding);\n              embeddings[originalIndex] = embedding;\n            });\n          } catch (error) {\n            if (error.code === 'ECONNABORTED') {\n              console.error('API request timed out');\n            } else {\n              console.error('Error getting embeddings:', error.response ? error.response.data : error.message);\n            }\n            throw error;\n          }\n        }\n      }\n\n      return Array.isArray(texts) ? embeddings : embeddings[0];\n    },\n\n    // Add this method to hash the text for caching\n    hashText(text) {\n      let hash = 0;\n      for (let i = 0; i < text.length; i++) {\n        const char = text.charCodeAt(i);\n        hash = ((hash << 5) - hash) + char;\n        hash = hash & hash; // Convert to 32-bit integer\n      }\n      return hash.toString();\n    },\n\n    async delay(ms) {\n      console.log(`Delaying for ${ms}ms...`);\n      return new Promise(resolve => setTimeout(resolve, ms));\n    },\n\n    async indexDocument() {\n      if (!this.pdfText || !this.apiKey) {\n        this.indexingProgressText = 'Please upload a PDF and provide an API key first.';\n        return;\n      }\n\n      this.isIndexing = true;\n      this.indexingProgress = 0;\n      this.indexingProgressText = 'Starting indexing...';\n\n      if (this.documentEmbeddings.length > 0) {\n        console.log('Document already indexed. Using cached embeddings.');\n        // Simulate fast progress\n        for (let i = 0; i <= 100; i += 10) {\n          this.indexingProgress = i;\n          this.indexingProgressText = `Using cached embeddings... ${i}%`;\n          await this.delay(50); // Short delay for visual feedback\n        }\n        this.isIndexed = true;\n        this.indexingProgressText = 'Using cached embeddings. Indexing completed!';\n        this.isIndexing = false;\n        return;\n      }\n\n      console.log('Starting document indexing...');\n      const chunks = this.chunkText(this.pdfText);\n      this.documentEmbeddings = [];\n\n      try {\n        const embeddings = await this.getEmbedding(chunks);\n        for (let i = 0; i < chunks.length; i++) {\n          this.documentEmbeddings.push({\n            id: uuidv4(),\n            text: chunks[i],\n            embedding: embeddings[i],\n            position: i,\n          });\n\n          this.indexingProgress = ((i + 1) / chunks.length) * 100;\n\n          if (i < chunks.length - 1 && i % 10 === 9) {\n            console.log(`Delaying before next batch...`);\n            await this.delay(DELAY_BETWEEN_BATCHES);\n          }\n        }\n\n        // Save embeddings to disk\n        this.saveEmbeddingsToDisk();\n\n        console.log('Document indexing completed');\n        this.indexingProgressText = 'Indexing completed successfully!';\n        this.isIndexed = true;\n      } catch (error) {\n        console.error('Error indexing document:', error);\n        this.indexingProgressText = 'Error indexing document. Please try again.';\n      } finally {\n        this.isIndexing = false;\n      }\n    },\n\n    saveEmbeddingsToDisk() {\n      const embeddingsJson = JSON.stringify(this.documentEmbeddings);\n      localStorage.setItem('documentEmbeddings', embeddingsJson);\n      console.log('Embeddings saved to localStorage');\n    },\n\n    loadEmbeddingsFromDisk() {\n      const embeddingsJson = localStorage.getItem('documentEmbeddings');\n      if (embeddingsJson) {\n        this.documentEmbeddings = JSON.parse(embeddingsJson);\n        this.isIndexed = this.documentEmbeddings.length > 0;\n        console.log(`Loaded ${this.documentEmbeddings.length} embeddings from localStorage`);\n      } else {\n        console.log('No embeddings found in localStorage');\n      }\n    },\n\n    clearEmbeddingsCache() {\n      localStorage.removeItem('documentEmbeddings');\n      this.documentEmbeddings = [];\n      this.isIndexed = false;\n      console.log('Embeddings cache cleared');\n    },\n\n    escapeHtml(unsafe) {\n      return unsafe\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n    },\n\n    escapeRegExp(string) {\n      return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    },\n\n    handleReset() {\n      this.pdfText = '';\n      this.question = '';\n      this.isIndexing = false;\n      this.documentEmbeddings = [];\n      this.embeddingCache = new Map();\n      this.isApiKeyValid = false;\n      this.indexingProgress = 0;\n      this.indexingProgressText = '';\n      this.questionEmbedding = null;\n      this.isProcessing = false;\n      this.prompt = '';\n      this.ragResponse = '';\n      this.error = '';\n      this.isIndexed = false;\n      this.highlightedSnippets = [];\n      // Reset the file input\n      const fileInput = document.getElementById('file-upload');\n      if (fileInput) {\n        fileInput.value = '';\n      }\n      console.log(\"Document and related data reset\");\n    },\n\n    toggleSettings() {\n      this.showSettings = !this.showSettings;\n    },\n\n    saveSettings() {\n      localStorage.setItem('baseUrl', this.baseUrl);\n      localStorage.setItem('embeddingModel', this.embeddingModel);\n      localStorage.setItem('chatModel', this.chatModel);\n      this.showSettings = false;\n      // Optionally, you can add a notification here to confirm settings were saved\n    },\n  },\n  mounted() {\n    // Load saved API key if it exists\n    const savedApiKey = localStorage.getItem('openaiApiKey');\n    if (savedApiKey) {\n      this.apiKey = savedApiKey;\n      this.validateAndSaveApiKey(); // Validate the loaded API key\n    }\n\n    // Set up PDF.js worker\n    pdfjsLib.GlobalWorkerOptions.workerSrc = `${process.env.BASE_URL}pdf.worker.min.js`;\n\n    // Load embeddings from disk\n    this.loadEmbeddingsFromDisk();\n\n    // Load saved settings\n    const savedBaseUrl = localStorage.getItem('baseUrl');\n    if (savedBaseUrl) {\n      this.baseUrl = savedBaseUrl;\n    }\n    const savedEmbeddingModel = localStorage.getItem('embeddingModel');\n    if (savedEmbeddingModel) {\n      this.embeddingModel = savedEmbeddingModel;\n    }\n    const savedChatModel = localStorage.getItem('chatModel');\n    if (savedChatModel) {\n      this.chatModel = savedChatModel;\n    }\n  },\n};\n</script>\n\n<style scoped>\n/* Add any component-specific styles here */\n</style>","import { render } from \"./RAGApp.vue?vue&type=template&id=5bab4a1c&scoped=true\"\nimport script from \"./RAGApp.vue?vue&type=script&lang=js\"\nexport * from \"./RAGApp.vue?vue&type=script&lang=js\"\n\nimport \"./RAGApp.vue?vue&type=style&index=0&id=5bab4a1c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5bab4a1c\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=0775d4ec\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=0775d4ec&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './assets/tailwind.css'\n\ncreateApp(App).mount('#app')","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkrag_app_vue\"] = self[\"webpackChunkrag_app_vue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], () => (__webpack_require__(835)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_RAGApp","class","_createElementVNode","xmlns","fill","viewBox","stroke","d","_hoisted_4","key","for","_hoisted_21","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","toggleSettings","_hoisted_5","$data","showSettings","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","$event","apiKey","type","placeholder","validateAndSaveApiKey","_hoisted_11","_hoisted_12","baseUrl","_hoisted_13","_hoisted_14","embeddingModel","_hoisted_15","_hoisted_16","chatModel","saveSettings","_createCommentVNode","isApiKeyValid","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_22","isIndexing","_hoisted_23","_hoisted_24","_hoisted_25","style","_normalizeStyle","width","indexingProgress","_hoisted_26","_toDisplayString","indexingProgressText","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_createTextVNode","onChange","handleFileUpload","accept","clearEmbeddingsCache","handleReset","pdfText","_hoisted_31","innerHTML","highlightedPdfText","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","prompt","_hoisted_36","_hoisted_37","coloredPrompt","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","question","onKeyup","_withKeys","submitQuestion","rows","disabled","isIndexed","isProcessing","_hoisted_42","error","_hoisted_43","ragResponse","_hoisted_44","_hoisted_45","_hoisted_46","CHUNK_SIZE","CHUNK_OVERLAP","DELAY_BETWEEN_BATCHES","API_TIMEOUT","EMBEDDING_MODEL","CHAT_MODEL","TOP_K_SIMILAR_CHUNKS","name","data","documentEmbeddings","embeddingCache","Map","questionEmbedding","highlightedSnippets","computed","this","parts","split","map","part","startsWith","escapeHtml","join","highlightedText","forEach","snippet","escapedSnippet","escapeRegExp","regex","RegExp","replace","methods","response","axios","get","headers","status","localStorage","setItem","console","log","model","event","file","target","files","text","extractTextFromPDF","indexDocument","alert","arrayBuffer","loadingTask","pdfjsLib","pdf","promise","fullText","i","numPages","page","getPage","textContent","getTextContent","pageText","items","item","str","getEmbedding","similarChunks","findSimilarChunks","length","chunk","generatePrompt","callChatModel","topK","similarity","cosineSimilarity","embedding","sort","a","b","slice","vecA","vecB","dotProduct","reduce","sum","magnitudeA","Math","sqrt","magnitudeB","contextText","index","post","messages","role","content","timeout","choices","message","chunkText","chunks","startIndex","endIndex","min","match","trim","push","warn","max","texts","textArray","Array","isArray","embeddings","batchSize","batch","cacheKeys","hashText","uncachedTexts","uncachedIndices","j","has","input","embeddingData","originalIndex","set","code","hash","char","charCodeAt","toString","delay","ms","Promise","resolve","setTimeout","uuidv4","position","saveEmbeddingsToDisk","embeddingsJson","JSON","stringify","loadEmbeddingsFromDisk","getItem","parse","removeItem","unsafe","string","fileInput","document","getElementById","value","mounted","savedApiKey","workerSrc","savedBaseUrl","savedEmbeddingModel","savedChatModel","__exports__","components","RAGApp","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","splice","r","definition","o","defineProperty","enumerable","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}